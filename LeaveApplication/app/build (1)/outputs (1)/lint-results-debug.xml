<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 25.2.5">

    <issue
        id="OnClick"
        severity="Error"
        message="Corresponding method handler &apos;`public void datePicker(android.view.View)`&apos; not found"
        category="Correctness"
        priority="10"
        summary="`onClick` method does not exist"
        explanation="The `onClick` attribute value should be the name of a method in this View&apos;s context to invoke when the view is clicked. This name must correspond to a public method that takes exactly one parameter of type `View`.

Must be a string value, using &apos;\;&apos; to escape characters such as &apos;\n&apos; or &apos;\uxxxx&apos; for a unicode character."
        errorLine1="        android:onClick=&quot;datePicker&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\form_layout.xml"
            line="75"
            column="9"/>
    </issue>

    <issue
        id="ScrollViewSize"
        severity="Warning"
        message="This ScrollView should use `android:layout_width=&quot;wrap_content&quot;`"
        category="Correctness"
        priority="7"
        summary="ScrollView size validation"
        explanation="ScrollView children must set their `layout_width` or `layout_height` attributes to `wrap_content` rather than `fill_parent` or `match_parent` in the scrolling dimension"
        errorLine1="                android:layout_width=&quot;match_parent&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form1.xml"
            line="18"
            column="17"/>
    </issue>

    <issue
        id="ScrollViewSize"
        severity="Warning"
        message="This LinearLayout should use `android:layout_height=&quot;wrap_content&quot;`"
        category="Correctness"
        priority="7"
        summary="ScrollView size validation"
        explanation="ScrollView children must set their `layout_width` or `layout_height` attributes to `wrap_content` rather than `fill_parent` or `match_parent` in the scrolling dimension"
        errorLine1="                    android:layout_height=&quot;match_parent&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form1.xml"
            line="23"
            column="21"/>
    </issue>

    <issue
        id="ScrollViewSize"
        severity="Warning"
        message="This ScrollView should use `android:layout_width=&quot;wrap_content&quot;`"
        category="Correctness"
        priority="7"
        summary="ScrollView size validation"
        explanation="ScrollView children must set their `layout_width` or `layout_height` attributes to `wrap_content` rather than `fill_parent` or `match_parent` in the scrolling dimension"
        errorLine1="            android:layout_width=&quot;match_parent&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form2.xml"
            line="16"
            column="13"/>
    </issue>

    <issue
        id="ScrollViewSize"
        severity="Warning"
        message="This LinearLayout should use `android:layout_height=&quot;wrap_content&quot;`"
        category="Correctness"
        priority="7"
        summary="ScrollView size validation"
        explanation="ScrollView children must set their `layout_width` or `layout_height` attributes to `wrap_content` rather than `fill_parent` or `match_parent` in the scrolling dimension"
        errorLine1="                android:layout_height=&quot;match_parent&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form2.xml"
            line="21"
            column="17"/>
    </issue>

    <issue
        id="ScrollViewSize"
        severity="Warning"
        message="This LinearLayout should use `android:layout_height=&quot;wrap_content&quot;`"
        category="Correctness"
        priority="7"
        summary="ScrollView size validation"
        explanation="ScrollView children must set their `layout_width` or `layout_height` attributes to `wrap_content` rather than `fill_parent` or `match_parent` in the scrolling dimension"
        errorLine1="        android:layout_height=&quot;match_parent&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_otp.xml"
            line="21"
            column="9"/>
    </issue>

    <issue
        id="ScrollViewSize"
        severity="Warning"
        message="This LinearLayout should use `android:layout_height=&quot;wrap_content&quot;`"
        category="Correctness"
        priority="7"
        summary="ScrollView size validation"
        explanation="ScrollView children must set their `layout_width` or `layout_height` attributes to `wrap_content` rather than `fill_parent` or `match_parent` in the scrolling dimension"
        errorLine1="        android:layout_height=&quot;match_parent&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_registration_form.xml"
            line="25"
            column="9"/>
    </issue>

    <issue
        id="ShowToast"
        severity="Warning"
        message="Toast created but not shown: did you forget to call `show()` ?"
        category="Correctness"
        priority="6"
        summary="Toast created but not shown"
        explanation="`Toast.makeText()` creates a `Toast` but does *not* show it. You must call `show()` on the resulting object to actually make the `Toast` appear."
        errorLine1="            Toast.makeText(this,&quot;Sign up has failed Try again&quot;,Toast.LENGTH_SHORT);"
        errorLine2="            ~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\java\com\example\shashimishra\leaveapplication\RegistrationForm.java"
            line="60"
            column="13"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Warning"
        message="Attribute `elevation` is only used in API level 21 and higher (current min is 9)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).

This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance of functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.

Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21."
        errorLine1="                        android:elevation=&quot;18dp&quot;>"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form1.xml"
            line="32"
            column="25"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Warning"
        message="Attribute `elevation` is only used in API level 21 and higher (current min is 9)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).

This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance of functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.

Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21."
        errorLine1="                    android:elevation=&quot;18dp&quot;>"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form2.xml"
            line="30"
            column="21"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Warning"
        message="Attribute `textCursorDrawable` is only used in API level 12 and higher (current min is 9)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).

This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance of functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.

Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21."
        errorLine1="        android:textCursorDrawable=&quot;@style/AppTheme&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_main.xml"
            line="38"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Warning"
        message="Attribute `elevation` is only used in API level 21 and higher (current min is 9)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).

This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance of functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.

Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21."
        errorLine1="        android:elevation=&quot;14dp&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\admin_login.xml"
            line="105"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Warning"
        message="Attribute `elevation` is only used in API level 21 and higher (current min is 9)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).

This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance of functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.

Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21."
        errorLine1="        android:elevation=&quot;14dp&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\form_layout.xml"
            line="57"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Warning"
        message="Attribute `elevation` is only used in API level 21 and higher (current min is 9)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).

This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance of functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.

Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21."
        errorLine1="        android:elevation=&quot;14dp&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\form_layout.xml"
            line="72"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Warning"
        message="Attribute `backgroundTint` is only used in API level 21 and higher (current min is 9)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).

This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance of functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.

Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21."
        errorLine1="        android:backgroundTint=&quot;@android:color/transparent&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\form_layout.xml"
            line="112"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Warning"
        message="Attribute `elevation` is only used in API level 21 and higher (current min is 9)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).

This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance of functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.

Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21."
        errorLine1="            android:elevation=&quot;17dp&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\form_layout.xml"
            line="148"
            column="13"/>
    </issue>

    <issue
        id="ExtraText"
        severity="Warning"
        message="Unexpected text found in layout file: &quot;10&quot;
        android:layout_below=&quot;@+id/textview1&quot;
        android:layout_centerHorizontal=&quot;true&quot;
   ...&quot;"
        category="Correctness"
        priority="3"
        summary="Extraneous text in resource files"
        explanation="Layout resource files should only contain elements and attributes. Any XML text content found in the file is likely accidental (and potentially dangerous if the text resembles XML and the developer believes the text to be functional)"
        errorLine1="        android:layout_below=&quot;@+id/textview1&quot;"
        errorLine2="     ^">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_main.xml"
            line="14"
            column="6"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="            android:textSize=&quot;25dp&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\admin_login.xml"
            line="62"
            column="13"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="            android:textSize=&quot;25dp&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\admin_login.xml"
            line="76"
            column="13"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="        android:textSize=&quot;25dp&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\admin_login.xml"
            line="98"
            column="9"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="        android:textSize=&quot;25dp&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\admin_login.xml"
            line="114"
            column="9"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="            android:textSize=&quot;20dp&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\form_layout.xml"
            line="36"
            column="13"/>
    </issue>

    <issue
        id="AllowBackup"
        severity="Warning"
        message="On SDK version 23 and up, your app data will be automatically backed up and restored on app install. Consider adding the attribute `android:fullBackupContent` to specify an `@xml` resource which configures which files to backup. More info: https://developer.android.com/training/backup/autosyncapi.html"
        category="Security"
        priority="3"
        summary="AllowBackup/FullBackupContent Problems"
        explanation="The `allowBackup` attribute determines if an application&apos;s data can be backed up and restored. It is documented at http://developer.android.com/reference/android/R.attr.html#allowBackup

By default, this flag is set to `true`. When this flag is set to `true`, application data can be backed up and restored by the user using `adb backup` and `adb restore`.

This may have security consequences for an application. `adb backup` allows users who have enabled USB debugging to copy application data off of the device. Once backed up, all application data can be read by the user. `adb restore` allows creation of application data from a source specified by the user. Following a restore, applications should not assume that the data, file permissions, and directory permissions were created by the application itself.

Setting `allowBackup=&quot;false&quot;` opts an application out of both backup and restore.

To fix this warning, decide whether your application should support backup, and explicitly set `android:allowBackup=(true|false)&quot;`.

If not set to false, and if targeting API 23 or later, lint will also warn that you should set `android:fullBackupContent` to configure auto backup."
        url="https://developer.android.com/training/backup/autosyncapi.html"
        urls="https://developer.android.com/training/backup/autosyncapi.html,http://developer.android.com/reference/android/R.attr.html#allowBackup"
        errorLine1="    &lt;application"
        errorLine2="    ^"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\AndroidManifest.xml"
            line="7"
            column="5"/>
    </issue>

    <issue
        id="Recycle"
        severity="Warning"
        message="This `Cursor` should be freed up after use with `#close()`"
        category="Performance"
        priority="7"
        summary="Missing `recycle()` calls"
        explanation="Many resources, such as TypedArrays, VelocityTrackers, etc., should be recycled (with a `recycle()` call) after use. This lint check looks for missing `recycle()` calls."
        errorLine1="        Cursor cursor = db.query(TABLE_EMPLOYEE, new String[]{KEY_ID,KEY_NAME,KEY_MAIL,KEY_PH_NO},KEY_ID+&quot;=?&quot;,new String[]{String.valueOf(id)},null,null,null,null);"
        errorLine2="                           ~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\java\com\example\shashimishra\leaveapplication\EmployeeDataBaseHandler.java"
            line="57"
            column="28"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_centerHorizontal`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                        android:layout_centerHorizontal=&quot;true&quot;"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form1.xml"
            line="29"
            column="25"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_alignParentBottom`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                        android:layout_alignParentBottom=&quot;true&quot;"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form1.xml"
            line="30"
            column="25"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_centerHorizontal`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                    android:layout_centerHorizontal=&quot;true&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form2.xml"
            line="27"
            column="21"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_alignParentBottom`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                    android:layout_alignParentBottom=&quot;true&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form2.xml"
            line="28"
            column="21"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_alignTop`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="            android:layout_alignTop=&quot;@+id/Userbut&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_main.xml"
            line="52"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_alignParentRight`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="            android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_main.xml"
            line="53"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_alignParentEnd`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="            android:layout_alignParentEnd=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_main.xml"
            line="54"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_alignParentBottom`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="            android:layout_alignParentBottom=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_main.xml"
            line="64"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_alignParentLeft`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="            android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_main.xml"
            line="65"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_alignParentStart`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="            android:layout_alignParentStart=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_main.xml"
            line="66"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `ScrollView`: `layout_alignParentTop`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="        android:layout_alignParentTop=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_otp.xml"
            line="24"
            column="9"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `ScrollView`: `layout_alignParentLeft`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="        android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_otp.xml"
            line="25"
            column="9"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `ScrollView`: `layout_alignParentStart`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="        android:layout_alignParentStart=&quot;true&quot;>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_otp.xml"
            line="26"
            column="9"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `ScrollView`: `layout_alignParentTop`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="        android:layout_alignParentTop=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_registration_form.xml"
            line="28"
            column="9"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `ScrollView`: `layout_alignParentLeft`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="        android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_registration_form.xml"
            line="29"
            column="9"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `ScrollView`: `layout_alignParentStart`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="        android:layout_alignParentStart=&quot;true&quot;>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_registration_form.xml"
            line="30"
            column="9"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_width` of `0dp` instead of `match_parent` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a LinearLayout defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="                android:layout_width=&quot;match_parent&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_otp.xml"
            line="61"
            column="17"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_height` of `0dp` instead of `30dp` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a LinearLayout defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="            android:layout_height=&quot;30dp&quot;>&lt;/LinearLayout>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_registration_form.xml"
            line="63"
            column="13"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_height` of `0dp` instead of `match_parent` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a LinearLayout defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="            android:layout_height=&quot;match_parent&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\admin_login.xml"
            line="34"
            column="13"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_width` of `0dp` instead of `match_parent` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a LinearLayout defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="            android:layout_width=&quot;match_parent&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\form_layout.xml"
            line="27"
            column="13"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@drawable/ss` with a theme that also paints a background (inferred theme is `@style/AppTheme`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1="    android:background=&quot;@drawable/ss&quot;>"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form1.xml"
            line="12"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@drawable/mynexsuswal` with a theme that also paints a background (inferred theme is `@style/AppTheme`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1="    android:background=&quot;@drawable/mynexsuswal&quot;>&lt;![CDATA["
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_main.xml"
            line="12"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@drawable/skms` with a theme that also paints a background (inferred theme is `@style/AppTheme`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1="    android:background=&quot;@drawable/skms&quot;>"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_otp.xml"
            line="12"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@drawable/ss` with a theme that also paints a background (inferred theme is `@style/AppTheme`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1="    android:background=&quot;@drawable/ss&quot;>"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_registration_form.xml"
            line="13"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@drawable/ss` with a theme that also paints a background (inferred theme is `@style/AppTheme`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1="    android:background=&quot;@drawable/ss&quot;>"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\form_layout.xml"
            line="13"
            column="5"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.navigation_drawer_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;navigation_drawer_width&quot;>240dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\values\dimens.xml"
            line="8"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.download` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable\download.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.drawer_shadow` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable-hdpi\drawer_shadow.9.png"/>
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable-mdpi\drawer_shadow.9.png"/>
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable-xhdpi\drawer_shadow.9.png"/>
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable-xxhdpi\drawer_shadow.9.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.menu.global` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\menu\global.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_drawer` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable-hdpi\ic_drawer.png"/>
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable-mdpi\ic_drawer.png"/>
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable-xhdpi\ic_drawer.png"/>
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable-xxhdpi\ic_drawer.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.mipmap.ic_launcher` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\mipmap-hdpi\ic_launcher.png"/>
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\mipmap-mdpi\ic_launcher.png"/>
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\mipmap-xhdpi\ic_launcher.png"/>
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\mipmap-xxhdpi\ic_launcher.png"/>
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\mipmap-xxxhdpi\ic_launcher.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.maxresdefault` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable\maxresdefault.jpg"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.mipmap.mynexsuswal` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\mipmap-xhdpi\mynexsuswal.jpg"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.side_nav_bar` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable-xhdpi\side_nav_bar.xml"
            line="1"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.skm` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable\skm.jpg"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.userid` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;userid&quot;>UserID&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\values\strings.xml"
            line="3"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.title_activity_navigation` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;title_activity_navigation&quot;>NavigationActivity&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\values\strings.xml"
            line="9"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.title_section1` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;title_section1&quot;>Section 1&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\values\strings.xml"
            line="11"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.title_section2` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;title_section2&quot;>Section 2&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\values\strings.xml"
            line="12"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.title_section3` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;title_section3&quot;>Section 3&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\values\strings.xml"
            line="13"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.navigation_drawer_open` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;navigation_drawer_open&quot;>Open navigation drawer&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\values\strings.xml"
            line="15"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.navigation_drawer_close` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;navigation_drawer_close&quot;>Close navigation drawer&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\values\strings.xml"
            line="16"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.action_example` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;action_example&quot;>Example action&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\values\strings.xml"
            line="18"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.action_settings` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;action_settings&quot;>Settings&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\values\strings.xml"
            line="20"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.title_activity_my_navigation` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;title_activity_my_navigation&quot;>MyNavigation&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\values\strings.xml"
            line="21"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.title_activity_nav` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;title_activity_nav&quot;>NavActivity&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\values\strings.xml"
            line="22"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.wp` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable\wp.jpg"/>
    </issue>

    <issue
        id="UselessLeaf"
        severity="Warning"
        message="This `TableRow` view is useless (no children, no `background`, no `id`, no `style`)"
        category="Performance"
        priority="2"
        summary="Useless leaf layout"
        explanation="A layout that has no children or no background can often be removed (since it is invisible) for a flatter and more efficient layout hierarchy."
        errorLine1="                        &lt;TableRow"
        errorLine2="                        ^"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form1.xml"
            line="34"
            column="25"/>
    </issue>

    <issue
        id="UselessLeaf"
        severity="Warning"
        message="This `TableRow` view is useless (no children, no `background`, no `id`, no `style`)"
        category="Performance"
        priority="2"
        summary="Useless leaf layout"
        explanation="A layout that has no children or no background can often be removed (since it is invisible) for a flatter and more efficient layout hierarchy."
        errorLine1="                        &lt;TableRow"
        errorLine2="                        ^"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form1.xml"
            line="38"
            column="25"/>
    </issue>

    <issue
        id="UselessLeaf"
        severity="Warning"
        message="This `TableRow` view is useless (no children, no `background`, no `id`, no `style`)"
        category="Performance"
        priority="2"
        summary="Useless leaf layout"
        explanation="A layout that has no children or no background can often be removed (since it is invisible) for a flatter and more efficient layout hierarchy."
        errorLine1="                        &lt;TableRow"
        errorLine2="                        ^"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form1.xml"
            line="42"
            column="25"/>
    </issue>

    <issue
        id="UselessLeaf"
        severity="Warning"
        message="This `TableRow` view is useless (no children, no `background`, no `id`, no `style`)"
        category="Performance"
        priority="2"
        summary="Useless leaf layout"
        explanation="A layout that has no children or no background can often be removed (since it is invisible) for a flatter and more efficient layout hierarchy."
        errorLine1="                        &lt;TableRow"
        errorLine2="                        ^"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form1.xml"
            line="46"
            column="25"/>
    </issue>

    <issue
        id="UselessLeaf"
        severity="Warning"
        message="This `TableRow` view is useless (no children, no `background`, no `id`, no `style`)"
        category="Performance"
        priority="2"
        summary="Useless leaf layout"
        explanation="A layout that has no children or no background can often be removed (since it is invisible) for a flatter and more efficient layout hierarchy."
        errorLine1="                    &lt;TableRow"
        errorLine2="                    ^"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form2.xml"
            line="32"
            column="21"/>
    </issue>

    <issue
        id="UselessLeaf"
        severity="Warning"
        message="This `TableRow` view is useless (no children, no `background`, no `id`, no `style`)"
        category="Performance"
        priority="2"
        summary="Useless leaf layout"
        explanation="A layout that has no children or no background can often be removed (since it is invisible) for a flatter and more efficient layout hierarchy."
        errorLine1="                    &lt;TableRow"
        errorLine2="                    ^"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form2.xml"
            line="36"
            column="21"/>
    </issue>

    <issue
        id="UselessLeaf"
        severity="Warning"
        message="This `TableRow` view is useless (no children, no `background`, no `id`, no `style`)"
        category="Performance"
        priority="2"
        summary="Useless leaf layout"
        explanation="A layout that has no children or no background can often be removed (since it is invisible) for a flatter and more efficient layout hierarchy."
        errorLine1="                    &lt;TableRow"
        errorLine2="                    ^"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form2.xml"
            line="40"
            column="21"/>
    </issue>

    <issue
        id="UselessLeaf"
        severity="Warning"
        message="This `TableRow` view is useless (no children, no `background`, no `id`, no `style`)"
        category="Performance"
        priority="2"
        summary="Useless leaf layout"
        explanation="A layout that has no children or no background can often be removed (since it is invisible) for a flatter and more efficient layout hierarchy."
        errorLine1="                    &lt;TableRow"
        errorLine2="                    ^"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form2.xml"
            line="44"
            column="21"/>
    </issue>

    <issue
        id="UselessLeaf"
        severity="Warning"
        message="This `LinearLayout` view is useless (no children, no `background`, no `id`, no `style`)"
        category="Performance"
        priority="2"
        summary="Useless leaf layout"
        explanation="A layout that has no children or no background can often be removed (since it is invisible) for a flatter and more efficient layout hierarchy."
        errorLine1="        &lt;LinearLayout"
        errorLine2="        ^"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_otp.xml"
            line="44"
            column="9"/>
    </issue>

    <issue
        id="UselessLeaf"
        severity="Warning"
        message="This `FrameLayout` view is useless (no children, no `background`, no `id`, no `style`)"
        category="Performance"
        priority="2"
        summary="Useless leaf layout"
        explanation="A layout that has no children or no background can often be removed (since it is invisible) for a flatter and more efficient layout hierarchy."
        errorLine1="    &lt;FrameLayout"
        errorLine2="    ^"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\admin_login.xml"
            line="13"
            column="5"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `TableLayout` layout or its `LinearLayout` parent is possibly useless"
        category="Performance"
        priority="2"
        summary="Useless parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="                    &lt;TableLayout"
        errorLine2="                    ^"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form1.xml"
            line="26"
            column="21"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `TableLayout` layout or its `LinearLayout` parent is possibly useless"
        category="Performance"
        priority="2"
        summary="Useless parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="                &lt;TableLayout"
        errorLine2="                ^"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_final_form2.xml"
            line="24"
            column="17"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `ScrollView` layout or its `RelativeLayout` parent is possibly useless; transfer the `background` attribute to the other view"
        category="Performance"
        priority="2"
        summary="Useless parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="    &lt;ScrollView"
        errorLine2="    ^"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_otp.xml"
            line="14"
            column="5"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `ScrollView` layout or its `RelativeLayout` parent is possibly useless; transfer the `background` attribute to the other view"
        category="Performance"
        priority="2"
        summary="Useless parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="    &lt;ScrollView"
        errorLine2="    ^"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_registration_form.xml"
            line="15"
            column="5"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/download.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon *really* is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable\download.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/maxresdefault.jpg` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon *really* is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable\maxresdefault.jpg"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/mynexsuswal.jpg` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon *really* is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable\mynexsuswal.jpg"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/skm.jpg` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon *really* is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable\skm.jpg"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/skms.jpg` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon *really* is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable\skms.jpg"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/ss.jpg` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon *really* is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable\ss.jpg"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/wp.jpg` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon *really* is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable\wp.jpg"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-hdpi`: side_nav_bar.xml (found in drawable-xhdpi)"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable-hdpi"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-mdpi`: side_nav_bar.xml (found in drawable-xhdpi)"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable-mdpi"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-xxhdpi`: side_nav_bar.xml (found in drawable-xhdpi)"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\drawable-xxhdpi"/>
    </issue>

    <issue
        id="IconMissingDensityFolder"
        severity="Warning"
        message="Missing density variation folders in `src\main\res`: drawable-xxxhdpi"
        category="Usability:Icons"
        priority="3"
        summary="Missing density folder"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra-high, extra-extra-high). This lint check identifies folders which are missing, such as `drawable-hdpi`.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res"/>
    </issue>

    <issue
        id="ButtonOrder"
        severity="Warning"
        message="Layout uses the wrong button order for API >= 14: Create a `layout-v14/admin_login.xml` file with opposite order: Cancel button should be on the left"
        category="Usability"
        priority="8"
        summary="Button order"
        explanation="According to the Android Design Guide,

&quot;Action buttons are typically Cancel and/or OK, with OK indicating the preferred or most likely action. However, if the options consist of specific actions such as Close or Wait rather than a confirmation or cancellation of the action described in the content, then all the buttons should be active verbs. As a rule, the dismissive action of a dialog is always on the left whereas the affirmative actions are on the right.&quot;

This check looks for button bars and buttons which look like cancel buttons, and makes sure that these are on the left."
        url="http://developer.android.com/design/building-blocks/dialogs.html"
        urls="http://developer.android.com/design/building-blocks/dialogs.html"
        errorLine1="    &lt;Button"
        errorLine2="    ^">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\admin_login.xml"
            line="108"
            column="5"/>
    </issue>

    <issue
        id="GoogleAppIndexingWarning"
        severity="Warning"
        message="App is not indexable by Google Search; consider adding at least one Activity with an ACTION-VIEW intent filter. See issue explanation for more details."
        category="Usability"
        priority="5"
        summary="Missing support for Firebase App Indexing"
        explanation="Adds URLs to get your app into the Google index, to get installs and traffic to your app from Google Search."
        url="https://g.co/AppIndexing/AndroidStudio"
        urls="https://g.co/AppIndexing/AndroidStudio"
        errorLine1="    &lt;application"
        errorLine2="    ^"
        quickfix="studio">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\AndroidManifest.xml"
            line="7"
            column="5"/>
    </issue>

    <issue
        id="TextFields"
        severity="Warning"
        message="This text field does not specify an `inputType` or a `hint`"
        category="Usability"
        priority="5"
        summary="Missing `inputType` or `hint`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). Similarly,a hint attribute displays a hint to the user for what is expected in the text field.

The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.

If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="                &lt;EditText"
        errorLine2="                ^"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_otp.xml"
            line="66"
            column="17"/>
    </issue>

    <issue
        id="TextFields"
        severity="Warning"
        message="The view name (`@+id/idPhoneField`) suggests this is a phone number, but it does not include &apos;`phone`&apos; in the `inputType`"
        category="Usability"
        priority="5"
        summary="Missing `inputType` or `hint`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). Similarly,a hint attribute displays a hint to the user for what is expected in the text field.

The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.

If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="                        android:id=&quot;@+id/idPhoneField&quot; />"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_registration_form.xml"
            line="170"
            column="25"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="            &lt;ImageButton"
        errorLine2="            ^"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_registration_form.xml"
            line="38"
            column="13"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="    &lt;ImageButton"
        errorLine2="    ^"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\form_layout.xml"
            line="39"
            column="5"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="    &lt;ImageButton"
        errorLine2="    ^"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\form_layout.xml"
            line="82"
            column="5"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="    &lt;ImageButton"
        errorLine2="    ^"
        quickfix="studio,adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\form_layout.xml"
            line="94"
            column="5"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Write Application&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;Write Application&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_main.xml"
            line="27"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Admin login&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Admin login&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_main.xml"
            line="49"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Student app&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Student app&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_main.xml"
            line="61"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Enter one-time-password&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;Enter one-time-password&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_otp.xml"
            line="35"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;OTP has been sent to your email,Kindly enter the Otp and Do Not Share with anyone else.&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;OTP has been sent to your email,Kindly enter the Otp and Do Not Share with anyone else.&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_otp.xml"
            line="93"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Resend OTP&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;Resend OTP&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_otp.xml"
            line="107"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Submit&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;Submit&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_otp.xml"
            line="122"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Registration Form&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;Registration Form&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_registration_form.xml"
            line="47"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;UserID&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                        android:hint=&quot;UserID&quot;"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_registration_form.xml"
            line="86"
            column="25"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Username&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                        android:hint=&quot;Username&quot;"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_registration_form.xml"
            line="112"
            column="25"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;email&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                        android:hint=&quot;email&quot;"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_registration_form.xml"
            line="138"
            column="25"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Phone&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                        android:hint=&quot;Phone&quot;"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_registration_form.xml"
            line="168"
            column="25"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Cancel&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;Cancel&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_registration_form.xml"
            line="183"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Go&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;Go&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_registration_form.xml"
            line="192"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Login&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Login&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\admin_login.xml"
            line="32"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;username&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:hint=&quot;username&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\admin_login.xml"
            line="66"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Password&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:hint=&quot;Password&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\admin_login.xml"
            line="79"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Submit&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;Submit&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\admin_login.xml"
            line="93"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Cancel&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;Cancel&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\admin_login.xml"
            line="109"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Leave Form&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Leave Form&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\form_layout.xml"
            line="26"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;To Date&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;To Date&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\form_layout.xml"
            line="53"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;From Date&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;From Date&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\form_layout.xml"
            line="68"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;userid&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:hint=&quot;userid&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\form_layout.xml"
            line="127"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;username&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:hint=&quot;username&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\form_layout.xml"
            line="138"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Signout&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:title=&quot;Signout&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\menu\global.xml"
            line="8"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:drawableEnd=&quot;@android:drawable/screen_background_light_transparent&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:drawableRight=&quot;@android:drawable/screen_background_light_transparent&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\Shashi.mishra\AndroidStudioProjects\LeaveApplication\app\src\main\res\layout\activity_main.xml"
            line="34"
            column="9"/>
    </issue>

</issues>
